<!DOCTYPE HTML>

<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title></title>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.6.0/underscore-min.js"></script>
</head>

<body>
    <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
    <script src="world.js"></script>

    <div id="map" style="height:600px; width:750px"></div>

    <div id="newsSpace"></div>
    <script type="text/template" id="newsTemplate">

        <%= country %>
        </br>
        </br>
        <% _.each(stories, function (story) { %>
            <a href="<%= story.link[2].$text %>"><%= story.title.$text %></a></li>
            </br>
            </br>
        <% }); %>
    </script>

    <script type="text/javascript">

        var stories;

        var renderNewsTemplate = function () {
          var newsTemplate = _.template($("#newsTemplate").html());
          var resultingHtml = newsTemplate({name: name, stories: stories});
          $("#newsSpace").html(resultingHtml);
        };

        var map = L.map('map', {
            center: [20, 10],
            zoom: 3,
        });

        L.tileLayer('http://{s}.tiles.mapbox.com/v3/aschetter.j63jha01/{z}/{x}/{y}.png', {
            minZoom: 2,
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>'
        }).addTo(map);

        var mouseOverStyle = {
            "fillOpacity": 0.7
        };

        var mouseOutStyle = {
            "fillOpacity": 0.3
        };

        var pickedStyle = {
            "color": "green"
        };

        var notPickedStyle = {
            "color": "blue"
        };

        var country = '';
        var name = '';
        var nprUrl = '';
        var wikiUrl = '';
        var info;

        var geojsonTileLayer = new L.GeoJSON(countriesData, {
            style: function(feature) {
                fillOpacity: 0.3;
                switch (feature.properties.picked) {
                    case true: return {color: 'green'};
                    case false: return {color: 'blue'};
                }
            },
            onEachFeature: function (feature, layer) {
                // layer.bindPopup(feature.properties.name);
                layer.on('mouseover', function () {
                    layer.setStyle(mouseOverStyle);
                    name = layer.feature.properties.name;
                    var array = name.split(' ');
                    country = array.join('');
                    var apiKey = 'MDE1NDc4NTQ2MDE0MDY3MzIwMThiNmRhMQ001'
                    nprUrl = 'http://api.npr.org/query?searchTerm=' + country + '&numResults=5&output=JSON&apiKey=' + apiKey
                    wikiUrl = 'http://en.wikipedia.org/w/api.php?action=query&prop=pageimages|extracts&exintro&titles=' + country + '&format=json&callback=?'
                    console.log('Name: ' + name);
                    console.log('array: ' + array);
                    console.log('country: ' + country);
                    console.log('nprUrl: ' + nprUrl);
                    console.log('wikiUrl: ' + wikiUrl);
                });
                layer.on('mouseout', function () {
                    layer.setStyle(mouseOutStyle);
                    country = '';
                    nprUrl = '';
                    wikiUrl = '';
                    // info = '';
                });
                layer.on('click', function () {
                    if (feature.properties.picked == true) {
                        feature.properties.picked = false;
                        layer.setStyle(notPickedStyle);
                    } else {
                        feature.properties.picked = true;
                        layer.setStyle(pickedStyle);
                    }
                    console.log('Picked: ' + feature.properties.picked);

                    // $.getJSON(nprUrl).complete(function(data) {
                    //     stories = data.responseJSON.list.story;
                    //     console.log(stories);
                    //     renderNewsTemplate();
                    // });

                    $.getJSON(wikiUrl).complete(function(data) {
                        var pages = data.responseJSON.query.pages
                        for (var pageId in pages) {
                            if (pages.hasOwnProperty(pageId)) {
                                // console.log(pages[pageId].title);
                                info = pages[pageId]
                            }
                        }
                    }); 
                })
            }
        });







        map.addLayer(geojsonTileLayer);

    </script>
</body>

</html>